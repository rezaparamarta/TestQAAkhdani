{"info":{"start":"2024-09-29T11:40:29.040Z","end":"2024-09-29T11:41:46.731Z","_duration":77691,"type":"runner","cid":"0-0","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"129.0.6668.60","chrome":{"chromedriverVersion":"129.0.6668.60 (c82bbfc83a46869153a82ee063df4a7ee9718f8d-refs/branch-heads/6668@{#1320})","userDataDir":"C:\\Users\\rezap\\AppData\\Local\\Temp\\scoped_dir19468_1656097761"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:62062"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webSocketUrl":"ws://localhost:62056/session/fccfc32ca94efdd85d7d4c2bb7fa904c","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"wdio:driverPID":19468,"sessionId":"fccfc32ca94efdd85d7d4c2bb7fa904c"},"sanitizedCapabilities":"chrome.129_0_6668_60.windows","config":{"protocol":"http","hostname":"localhost","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"},"webSocketUrl":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\rezap\\AppData\\Local\\Temp","port":62056,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","baseUrl":"https://www.demoblaze.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\TestQAAkhdani","specs":["./test/specs/demoTest.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","html-nice"],"services":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":[],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]},"specs":["file:///D:/TestQAAkhdani/test/specs/demoTest.js"],"sessionId":"fccfc32ca94efdd85d7d4c2bb7fa904c","isMultiremote":false,"instanceOptions":{"fccfc32ca94efdd85d7d4c2bb7fa904c":{"protocol":"http","hostname":"localhost","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"},"webSocketUrl":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\rezap\\AppData\\Local\\Temp","port":62056,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","baseUrl":"https://www.demoblaze.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\TestQAAkhdani","specs":["./test/specs/demoTest.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","html-nice"],"services":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":[],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":10,"skipped":0,"failed":0,"duration":77691,"start":"2024-09-29T11:40:29.041Z","end":"2024-09-29T11:41:46Z"},"title":"Test Report Title","suites":[{"start":"2024-09-29T11:40:29.055Z","end":"2024-09-29T11:41:46.656Z","_duration":77600,"type":"suite:start","uid":"suite-0-0","cid":"0-0","file":"D:\\TestQAAkhdani\\test\\specs\\demoTest.js","title":"Sign up Page","fullTitle":"Sign up Page","tests":[{"start":"2024-09-29T11:40:29.056Z","end":"2024-09-29T11:40:35.948Z","_duration":6892,"type":"test","uid":"test-00-0","cid":"0-0","title":"Test Case 1 - Access the website and check the browser title","fullTitle":"Sign up Page.Test Case 1 - Access the website and check the browser title","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('https://www.demoblaze.com/');\r\n        \r\n        const title = await browser.getTitle();\r\n        console.log('The page title is:', title);  // Log the actual title for debugging\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:35.949Z","end":"2024-09-29T11:40:36.249Z","_duration":300,"type":"test","uid":"test-00-1","cid":"0-0","title":"Test Case 2 - Get the text of the navigation menu","fullTitle":"Sign up Page.Test Case 2 - Get the text of the navigation menu","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n\r\n        const expectedLinks = [\r\n            'Home',\r\n            'Contact',\r\n            'About us',\r\n            'Cart',\r\n            'Log in',\r\n            'Sign up'\r\n        ];\r\n\r\n        const actualLinks = [];\r\n        const navlinks = await $$('.navbar-nav .nav-item a');\r\n        for (const link of navlinks) {\r\n            const text = await link.getText();\r\n            if (text.trim()) {  // Remove empty texts\r\n                actualLinks.push(text.trim().replace('(current)', '').trim());  // Remove '(current)' if exists\r\n            }\r\n        }\r\n        \r\n        console.log('Actual Links:', actualLinks);\r\n        expect(actualLinks).toEqual(expectedLinks);  // Use WebDriverIO syntax for assertion\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:36.249Z","end":"2024-09-29T11:40:40.453Z","_duration":4204,"type":"test","uid":"test-00-2","cid":"0-0","title":"Test Case 3 - Sign up with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 3 - Sign up with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n    \r\n        const link = await $('#signin2');\r\n        await link.click();\r\n    \r\n        const emailInput = await $('#sign-username');\r\n        const passwordInput = await $('#sign-password');\r\n\r\n        // Menghasilkan username acak\r\n        const randomUsername = generateRandomUsername();\r\n        await emailInput.setValue(randomUsername); // Menggunakan username acak\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const submitButton = await $('//*[@id=\"signInModal\"]/div/div/div[3]/button[2]');\r\n        await submitButton.click();\r\n    \r\n        // Capture the success message from the modal (if it's a modal dialog)\r\n        const modalMessage = await $('div.modal-body').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n    \r\n        // Assert the text\r\n        expect(modalMessage).toContain('');  // Use 'toEqual' instead of 'toDeepEqual'\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:40.454Z","end":"2024-09-29T11:40:49.203Z","_duration":8749,"type":"test","uid":"test-00-3","cid":"0-0","title":"Test Case 4 - Log in with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 4 - Log in with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        await browser.url('/');\r\n        const loginLink = await $('#login2');\r\n        await loginLink.click();\r\n         \r\n        const emailInput = await $('#loginusername');\r\n        const passwordInput = await $('#loginpassword');\r\n        await emailInput.setValue('Reza Paramarta'); // Use the same random username if needed\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const loginbutton = await $('//*[@id=\"logInModal\"]/div/div/div[3]/button[2]');\r\n        await loginbutton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:49.204Z","end":"2024-09-29T11:41:01.547Z","_duration":12343,"type":"test","uid":"test-00-4","cid":"0-0","title":"Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","fullTitle":"Sign up Page.Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/index.html');\r\n    \r\n        // Define all elements at once\r\n        const product = {\r\n            name: await $('//*[@id=\"tbodyid\"]/div[1]/div/div/h4/a'),\r\n            image: await $('//*[@id=\"imgp\"]/div/img'),\r\n            title: await $('//*[@id=\"tbodyid\"]/h2'),\r\n            price: await $('//*[@id=\"tbodyid\"]/h3'),\r\n            specs: await $('//*[@id=\"more-information\"]')\r\n        };\r\n    \r\n        // Click on the product name (Samsung Galaxy S6)\r\n        await product.name.click();\r\n    \r\n        // Assert product details\r\n        expect(await product.image.getAttribute('src')).toContain('galaxy_s6.jpg'); // Optimized expected value\r\n        expect(await product.title.getText()).toContain('Samsung galaxy s6');\r\n        expect(await product.price.getText()).toContain('$360 *includes tax');\r\n        \r\n        // Optimized spec assertions\r\n        const specsText = await product.specs.getText();\r\n        expect(specsText).toContain('The Samsung Galaxy S6 is powered by 1.5GHz octa-core Samsung Exynos 7420 processor and it comes with 3GB of RAM.');\r\n        expect(specsText).toContain('The phone packs 32GB of internal storage');\r\n\r\n        // Add to cart\r\n        const addToCartButton = await $('//*[@id=\"tbodyid\"]/div[2]/div/a');\r\n        await addToCartButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:01.547Z","end":"2024-09-29T11:41:12.305Z","_duration":10758,"type":"test","uid":"test-00-5","cid":"0-0","title":"Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","fullTitle":"Sign up Page.Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const cartButton = await $('//*[@id=\"cartur\"]');\r\n        await cartButton.click();\r\n\r\n        await browser.pause(8000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:12.306Z","end":"2024-09-29T11:41:15.371Z","_duration":3065,"type":"test","uid":"test-00-6","cid":"0-0","title":"Test Case 7 - Click Place Order to Purchase Item","fullTitle":"Sign up Page.Test Case 7 - Click Place Order to Purchase Item","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const placeOrderButton = await $('//*[@id=\"page-wrapper\"]/div/div[2]/button');\r\n        await placeOrderButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:15.371Z","end":"2024-09-29T11:41:33.236Z","_duration":17865,"type":"test","uid":"test-00-7","cid":"0-0","title":"Test Case 8 - Fill all input fields and click Purchase button","fullTitle":"Sign up Page.Test Case 8 - Fill all input fields and click Purchase button","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const firstNameInput = await $('#name');\r\n        const countryNameInput = await $('#country');\r\n        const cityNameInput = await $('#city');\r\n        const creditCardInput = await $('#card');\r\n        const monthInput = await $('#month');\r\n        const yearInput = await $('#year');\r\n    \r\n        await firstNameInput.setValue('Reza');\r\n        await countryNameInput.setValue('Indonesia');\r\n        await cityNameInput.setValue('Jakarta');\r\n        await creditCardInput.setValue('4242424242424242');\r\n        await monthInput.setValue('12');\r\n        await yearInput.setValue('2024');\r\n    \r\n        const purchaseButton = await $('//*[@id=\"orderModal\"]/div/div/div[3]/button[2]');\r\n        await purchaseButton.click();\r\n        \r\n        // Wait for the dialog to appear\r\n        const sweetAlert = await $('.sweet-alert');\r\n        await sweetAlert.waitForDisplayed({ timeout: 5000 });\r\n    \r\n        // Capture the success message from the dialog\r\n        const modalMessage = await sweetAlert.$('h2').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n        await browser.pause(5000);\r\n    \r\n        // Assert the success message\r\n        expect(modalMessage).toBe('Thank you for your purchase!');\r\n\r\n        // Click OK Button\r\n        const okButton = await $('.sweet-alert button.confirm');\r\n        await okButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:33.238Z","end":"2024-09-29T11:41:43.357Z","_duration":10119,"type":"test","uid":"test-00-8","cid":"0-0","title":"Test Case 9 - Click About Us Navigation Menu chekc Detail and close dialog","fullTitle":"Sign up Page.Test Case 9 - Click About Us Navigation Menu chekc Detail and close dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const aboutUsButton = await $('//*[@id=\"navbarExample\"]/ul/li[3]/a');\r\n        const closeButton = await $('//*[@id=\"videoModal\"]/div/div/div[3]/button');\r\n        await aboutUsButton.click();\r\n        await browser.pause(5000);\r\n        await closeButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:43.357Z","end":"2024-09-29T11:41:46.653Z","_duration":3296,"type":"test","uid":"test-00-9","cid":"0-0","title":"should display Sony Vaio i5 after selecting Laptops category","fullTitle":"Sign up Page.should display Sony Vaio i5 after selecting Laptops category","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        // Open the webpage\r\n        await browser.url('/');\r\n        \r\n        // Click the Laptops category link\r\n        const laptopsCategory = await $('a[onclick=\"byCat(\\'notebook\\')\"]');\r\n        await laptopsCategory.click();\r\n        \r\n        // Wait for the products to load\r\n        await browser.pause(2000); // Adjust as needed based on page loading time\r\n        \r\n        // Check that the catalog for \"Sony Vaio i5\" is visible\r\n        const sonyVaioI5 = await $('a[href=\"prod.html?idp_=8\"]');\r\n        \r\n        // Expect that the product is displayed\r\n        await expect(sonyVaioI5).toBeDisplayed();\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"start":"2024-09-29T11:40:29.056Z","end":"2024-09-29T11:40:35.948Z","_duration":6892,"type":"test","uid":"test-00-0","cid":"0-0","title":"Test Case 1 - Access the website and check the browser title","fullTitle":"Sign up Page.Test Case 1 - Access the website and check the browser title","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('https://www.demoblaze.com/');\r\n        \r\n        const title = await browser.getTitle();\r\n        console.log('The page title is:', title);  // Log the actual title for debugging\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:35.949Z","end":"2024-09-29T11:40:36.249Z","_duration":300,"type":"test","uid":"test-00-1","cid":"0-0","title":"Test Case 2 - Get the text of the navigation menu","fullTitle":"Sign up Page.Test Case 2 - Get the text of the navigation menu","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n\r\n        const expectedLinks = [\r\n            'Home',\r\n            'Contact',\r\n            'About us',\r\n            'Cart',\r\n            'Log in',\r\n            'Sign up'\r\n        ];\r\n\r\n        const actualLinks = [];\r\n        const navlinks = await $$('.navbar-nav .nav-item a');\r\n        for (const link of navlinks) {\r\n            const text = await link.getText();\r\n            if (text.trim()) {  // Remove empty texts\r\n                actualLinks.push(text.trim().replace('(current)', '').trim());  // Remove '(current)' if exists\r\n            }\r\n        }\r\n        \r\n        console.log('Actual Links:', actualLinks);\r\n        expect(actualLinks).toEqual(expectedLinks);  // Use WebDriverIO syntax for assertion\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:36.249Z","end":"2024-09-29T11:40:40.453Z","_duration":4204,"type":"test","uid":"test-00-2","cid":"0-0","title":"Test Case 3 - Sign up with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 3 - Sign up with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n    \r\n        const link = await $('#signin2');\r\n        await link.click();\r\n    \r\n        const emailInput = await $('#sign-username');\r\n        const passwordInput = await $('#sign-password');\r\n\r\n        // Menghasilkan username acak\r\n        const randomUsername = generateRandomUsername();\r\n        await emailInput.setValue(randomUsername); // Menggunakan username acak\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const submitButton = await $('//*[@id=\"signInModal\"]/div/div/div[3]/button[2]');\r\n        await submitButton.click();\r\n    \r\n        // Capture the success message from the modal (if it's a modal dialog)\r\n        const modalMessage = await $('div.modal-body').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n    \r\n        // Assert the text\r\n        expect(modalMessage).toContain('');  // Use 'toEqual' instead of 'toDeepEqual'\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:40.454Z","end":"2024-09-29T11:40:49.203Z","_duration":8749,"type":"test","uid":"test-00-3","cid":"0-0","title":"Test Case 4 - Log in with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 4 - Log in with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        await browser.url('/');\r\n        const loginLink = await $('#login2');\r\n        await loginLink.click();\r\n         \r\n        const emailInput = await $('#loginusername');\r\n        const passwordInput = await $('#loginpassword');\r\n        await emailInput.setValue('Reza Paramarta'); // Use the same random username if needed\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const loginbutton = await $('//*[@id=\"logInModal\"]/div/div/div[3]/button[2]');\r\n        await loginbutton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:40:49.204Z","end":"2024-09-29T11:41:01.547Z","_duration":12343,"type":"test","uid":"test-00-4","cid":"0-0","title":"Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","fullTitle":"Sign up Page.Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/index.html');\r\n    \r\n        // Define all elements at once\r\n        const product = {\r\n            name: await $('//*[@id=\"tbodyid\"]/div[1]/div/div/h4/a'),\r\n            image: await $('//*[@id=\"imgp\"]/div/img'),\r\n            title: await $('//*[@id=\"tbodyid\"]/h2'),\r\n            price: await $('//*[@id=\"tbodyid\"]/h3'),\r\n            specs: await $('//*[@id=\"more-information\"]')\r\n        };\r\n    \r\n        // Click on the product name (Samsung Galaxy S6)\r\n        await product.name.click();\r\n    \r\n        // Assert product details\r\n        expect(await product.image.getAttribute('src')).toContain('galaxy_s6.jpg'); // Optimized expected value\r\n        expect(await product.title.getText()).toContain('Samsung galaxy s6');\r\n        expect(await product.price.getText()).toContain('$360 *includes tax');\r\n        \r\n        // Optimized spec assertions\r\n        const specsText = await product.specs.getText();\r\n        expect(specsText).toContain('The Samsung Galaxy S6 is powered by 1.5GHz octa-core Samsung Exynos 7420 processor and it comes with 3GB of RAM.');\r\n        expect(specsText).toContain('The phone packs 32GB of internal storage');\r\n\r\n        // Add to cart\r\n        const addToCartButton = await $('//*[@id=\"tbodyid\"]/div[2]/div/a');\r\n        await addToCartButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:01.547Z","end":"2024-09-29T11:41:12.305Z","_duration":10758,"type":"test","uid":"test-00-5","cid":"0-0","title":"Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","fullTitle":"Sign up Page.Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const cartButton = await $('//*[@id=\"cartur\"]');\r\n        await cartButton.click();\r\n\r\n        await browser.pause(8000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:12.306Z","end":"2024-09-29T11:41:15.371Z","_duration":3065,"type":"test","uid":"test-00-6","cid":"0-0","title":"Test Case 7 - Click Place Order to Purchase Item","fullTitle":"Sign up Page.Test Case 7 - Click Place Order to Purchase Item","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const placeOrderButton = await $('//*[@id=\"page-wrapper\"]/div/div[2]/button');\r\n        await placeOrderButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:15.371Z","end":"2024-09-29T11:41:33.236Z","_duration":17865,"type":"test","uid":"test-00-7","cid":"0-0","title":"Test Case 8 - Fill all input fields and click Purchase button","fullTitle":"Sign up Page.Test Case 8 - Fill all input fields and click Purchase button","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const firstNameInput = await $('#name');\r\n        const countryNameInput = await $('#country');\r\n        const cityNameInput = await $('#city');\r\n        const creditCardInput = await $('#card');\r\n        const monthInput = await $('#month');\r\n        const yearInput = await $('#year');\r\n    \r\n        await firstNameInput.setValue('Reza');\r\n        await countryNameInput.setValue('Indonesia');\r\n        await cityNameInput.setValue('Jakarta');\r\n        await creditCardInput.setValue('4242424242424242');\r\n        await monthInput.setValue('12');\r\n        await yearInput.setValue('2024');\r\n    \r\n        const purchaseButton = await $('//*[@id=\"orderModal\"]/div/div/div[3]/button[2]');\r\n        await purchaseButton.click();\r\n        \r\n        // Wait for the dialog to appear\r\n        const sweetAlert = await $('.sweet-alert');\r\n        await sweetAlert.waitForDisplayed({ timeout: 5000 });\r\n    \r\n        // Capture the success message from the dialog\r\n        const modalMessage = await sweetAlert.$('h2').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n        await browser.pause(5000);\r\n    \r\n        // Assert the success message\r\n        expect(modalMessage).toBe('Thank you for your purchase!');\r\n\r\n        // Click OK Button\r\n        const okButton = await $('.sweet-alert button.confirm');\r\n        await okButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:33.238Z","end":"2024-09-29T11:41:43.357Z","_duration":10119,"type":"test","uid":"test-00-8","cid":"0-0","title":"Test Case 9 - Click About Us Navigation Menu chekc Detail and close dialog","fullTitle":"Sign up Page.Test Case 9 - Click About Us Navigation Menu chekc Detail and close dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const aboutUsButton = await $('//*[@id=\"navbarExample\"]/ul/li[3]/a');\r\n        const closeButton = await $('//*[@id=\"videoModal\"]/div/div/div[3]/button');\r\n        await aboutUsButton.click();\r\n        await browser.pause(5000);\r\n        await closeButton.click();\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T11:41:43.357Z","end":"2024-09-29T11:41:46.653Z","_duration":3296,"type":"test","uid":"test-00-9","cid":"0-0","title":"should display Sony Vaio i5 after selecting Laptops category","fullTitle":"Sign up Page.should display Sony Vaio i5 after selecting Laptops category","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        // Open the webpage\r\n        await browser.url('/');\r\n        \r\n        // Click the Laptops category link\r\n        const laptopsCategory = await $('a[onclick=\"byCat(\\'notebook\\')\"]');\r\n        await laptopsCategory.click();\r\n        \r\n        // Wait for the products to load\r\n        await browser.pause(2000); // Adjust as needed based on page loading time\r\n        \r\n        // Check that the catalog for \"Sony Vaio i5\" is visible\r\n        const sonyVaioI5 = await $('a[href=\"prod.html?idp_=8\"]');\r\n        \r\n        // Expect that the product is displayed\r\n        await expect(sonyVaioI5).toBeDisplayed();\r\n    }","events":[],"errorIndex":0}]}],"reportFile":"D:\\TestQAAkhdani\\reports\\html-reports\\report-0-0.html","browserName":"not specified"}