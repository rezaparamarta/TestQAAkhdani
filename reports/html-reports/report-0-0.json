{"info":{"start":"2024-09-29T06:15:44.776Z","end":"2024-09-29T06:16:32.442Z","_duration":47666,"type":"runner","cid":"0-0","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"129.0.6668.60","chrome":{"chromedriverVersion":"129.0.6668.60 (c82bbfc83a46869153a82ee063df4a7ee9718f8d-refs/branch-heads/6668@{#1320})","userDataDir":"C:\\Users\\rezap\\AppData\\Local\\Temp\\scoped_dir16808_428722164"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:58439"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webSocketUrl":"ws://localhost:58433/session/a87374e664213592b2b88fd5a7c20342","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"wdio:driverPID":16808,"sessionId":"a87374e664213592b2b88fd5a7c20342"},"sanitizedCapabilities":"chrome.129_0_6668_60.windows","config":{"protocol":"http","hostname":"localhost","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"},"webSocketUrl":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\rezap\\AppData\\Local\\Temp","port":58433,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","baseUrl":"https://www.demoblaze.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\TestQAAkhdani","specs":["./test/specs/demoTest.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","html-nice"],"services":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":[],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]},"specs":["file:///D:/TestQAAkhdani/test/specs/demoTest.js"],"sessionId":"a87374e664213592b2b88fd5a7c20342","isMultiremote":false,"instanceOptions":{"a87374e664213592b2b88fd5a7c20342":{"protocol":"http","hostname":"localhost","path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"},"webSocketUrl":true},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\rezap\\AppData\\Local\\Temp","port":58433,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"binary":"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"}},"automationProtocol":"webdriver","baseUrl":"https://www.demoblaze.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"D:\\TestQAAkhdani","specs":["./test/specs/demoTest.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","html-nice"],"services":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":[],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","ignoredWorkerServices":[]}},"retry":0,"failures":1,"retries":0},"metrics":{"passed":7,"skipped":0,"failed":1,"duration":47666,"start":"2024-09-29T06:15:44.778Z","end":"2024-09-29T06:16:32Z"},"title":"Test Report Title","suites":[{"start":"2024-09-29T06:15:44.792Z","end":"2024-09-29T06:16:32.230Z","_duration":47437,"type":"suite:start","uid":"suite-0-0","cid":"0-0","file":"D:\\TestQAAkhdani\\test\\specs\\demoTest.js","title":"Sign up Page","fullTitle":"Sign up Page","tests":[{"start":"2024-09-29T06:15:44.793Z","end":"2024-09-29T06:15:51.406Z","_duration":6613,"type":"test","uid":"test-00-0","cid":"0-0","title":"Test Case 1 - Access the website and check the browser title","fullTitle":"Sign up Page.Test Case 1 - Access the website and check the browser title","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('https://www.demoblaze.com/');\r\n        \r\n        const title = await browser.getTitle();\r\n        console.log('The page title is:', title);  // Log the actual title for debugging\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:51.407Z","end":"2024-09-29T06:15:51.706Z","_duration":299,"type":"test","uid":"test-00-1","cid":"0-0","title":"Test Case 2 - Get the text of the navigation menu","fullTitle":"Sign up Page.Test Case 2 - Get the text of the navigation menu","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n\r\n        const expectedLinks = [\r\n            'Home',\r\n            'Contact',\r\n            'About us',\r\n            'Cart',\r\n            'Log in',\r\n            'Sign up'\r\n        ];\r\n\r\n        const actualLinks = [];\r\n        const navlinks = await $$('.navbar-nav .nav-item a');\r\n        for (const link of navlinks) {\r\n            const text = await link.getText();\r\n            if (text.trim()) {  // Remove empty texts\r\n                actualLinks.push(text.trim().replace('(current)', '').trim());  // Remove '(current)' if exists\r\n            }\r\n        }\r\n        \r\n        console.log('Actual Links:', actualLinks);\r\n        expect(actualLinks).toEqual(expectedLinks);  // Use WebDriverIO syntax for assertion\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:51.707Z","end":"2024-09-29T06:15:55.948Z","_duration":4241,"type":"test","uid":"test-00-2","cid":"0-0","title":"Test Case 3 - Sign up with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 3 - Sign up with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n    \r\n        const link = await $('#signin2');\r\n        await link.click();\r\n    \r\n        const emailInput = await $('#sign-username');\r\n        const passwordInput = await $('#sign-password');\r\n\r\n        // Menghasilkan username acak\r\n        const randomUsername = generateRandomUsername();\r\n        await emailInput.setValue(randomUsername); // Menggunakan username acak\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const submitButton = await $('//*[@id=\"signInModal\"]/div/div/div[3]/button[2]');\r\n        await submitButton.click();\r\n    \r\n        // Capture the success message from the modal (if it's a modal dialog)\r\n        const modalMessage = await $('div.modal-body').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n    \r\n        // Assert the text\r\n        expect(modalMessage).toContain('');  // Use 'toEqual' instead of 'toDeepEqual'\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:55.949Z","end":"2024-09-29T06:16:00.641Z","_duration":4692,"type":"test","uid":"test-00-3","cid":"0-0","title":"Test Case 4 - Log in with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 4 - Log in with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        await browser.url('/');\r\n        const loginLink = await $('#login2');\r\n        await loginLink.click();\r\n         \r\n        const emailInput = await $('#loginusername');\r\n        const passwordInput = await $('#loginpassword');\r\n        await emailInput.setValue('Reza Paramarta'); // Use the same random username if needed\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const loginbutton = await $('//*[@id=\"logInModal\"]/div/div/div[3]/button[2]');\r\n        await loginbutton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:00.642Z","end":"2024-09-29T06:16:08.351Z","_duration":7709,"type":"test","uid":"test-00-4","cid":"0-0","title":"Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","fullTitle":"Sign up Page.Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/index.html');\r\n    \r\n        // Define all elements at once\r\n        const product = {\r\n            name: await $('//*[@id=\"tbodyid\"]/div[1]/div/div/h4/a'),\r\n            image: await $('//*[@id=\"imgp\"]/div/img'),\r\n            title: await $('//*[@id=\"tbodyid\"]/h2'),\r\n            price: await $('//*[@id=\"tbodyid\"]/h3'),\r\n            specs: await $('//*[@id=\"more-information\"]')\r\n        };\r\n    \r\n        // Click on the product name (Samsung Galaxy S6)\r\n        await product.name.click();\r\n    \r\n        // Assert product details\r\n        expect(await product.image.getAttribute('src')).toContain('galaxy_s6.jpg'); // Optimized expected value\r\n        expect(await product.title.getText()).toContain('Samsung galaxy s6');\r\n        expect(await product.price.getText()).toContain('$360 *includes tax');\r\n        \r\n        // Optimized spec assertions\r\n        const specsText = await product.specs.getText();\r\n        expect(specsText).toContain('The Samsung Galaxy S6 is powered by 1.5GHz octa-core Samsung Exynos 7420 processor and it comes with 3GB of RAM.');\r\n        expect(specsText).toContain('The phone packs 32GB of internal storage');\r\n\r\n        // Add to cart\r\n        const addToCartButton = await $('//*[@id=\"tbodyid\"]/div[2]/div/a');\r\n        await addToCartButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:08.351Z","end":"2024-09-29T06:16:18.067Z","_duration":9716,"type":"test","uid":"test-00-5","cid":"0-0","title":"Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","fullTitle":"Sign up Page.Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const cartButton = await $('//*[@id=\"cartur\"]');\r\n        await cartButton.click();\r\n\r\n        await browser.pause(8000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:18.068Z","end":"2024-09-29T06:16:21.171Z","_duration":3103,"type":"test","uid":"test-00-6","cid":"0-0","title":"Test Case 7 - Click Place Order to Purchase Item","fullTitle":"Sign up Page.Test Case 7 - Click Place Order to Purchase Item","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const placeOrderButton = await $('//*[@id=\"page-wrapper\"]/div/div[2]/button');\r\n        await placeOrderButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:21.171Z","end":"2024-09-29T06:16:32.227Z","_duration":11056,"type":"test","uid":"test-00-7","cid":"0-0","title":"Test Case 8 - Fill all input fields and click Purchase button","fullTitle":"Sign up Page.Test Case 8 - Fill all input fields and click Purchase button","output":[],"retries":0,"parent":"Sign up Page","state":"failed","errors":[{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"}],"error":{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"},"body":"async () => {\r\n        const firstNameInput = await $('//*[@id=\"name\"]');\r\n        const countryNameInput = await $('//*[@id=\"country\"]');\r\n        const cityNameInput = await $('//*[@id=\"city\"]');\r\n        const creditCardInput = await $('//*[@id=\"card\"]');\r\n        const monthInput = await $('//*[@id=\"month\"]');\r\n        const yearInput = await $('//*[@id=\"year\"]');\r\n\r\n        await firstNameInput.setValue('Reza');\r\n        await countryNameInput.setValue('Indonesia');\r\n        await cityNameInput.setValue('Jakarta');\r\n        await creditCardInput.setValue('4242424242424242');\r\n        await monthInput.setValue('12');\r\n        await yearInput.setValue('2024');\r\n\r\n        const purchaseButton = await $('//*[@id=\"orderModal\"]/div/div/div[3]/button[2]');\r\n        await purchaseButton.click();\r\n        \r\n        const modalMessage = await $('/html/body/div[12]').getText();\r\n        expect(modalMessage).toBe('Thank you for your purchase!');\r\n\r\n        await browser.pause(3000);\r\n    }","events":[{"type":"Error","value":{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"}}],"errorIndex":1}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"start":"2024-09-29T06:15:44.793Z","end":"2024-09-29T06:15:51.406Z","_duration":6613,"type":"test","uid":"test-00-0","cid":"0-0","title":"Test Case 1 - Access the website and check the browser title","fullTitle":"Sign up Page.Test Case 1 - Access the website and check the browser title","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('https://www.demoblaze.com/');\r\n        \r\n        const title = await browser.getTitle();\r\n        console.log('The page title is:', title);  // Log the actual title for debugging\r\n        await browser.pause(5000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:51.407Z","end":"2024-09-29T06:15:51.706Z","_duration":299,"type":"test","uid":"test-00-1","cid":"0-0","title":"Test Case 2 - Get the text of the navigation menu","fullTitle":"Sign up Page.Test Case 2 - Get the text of the navigation menu","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n\r\n        const expectedLinks = [\r\n            'Home',\r\n            'Contact',\r\n            'About us',\r\n            'Cart',\r\n            'Log in',\r\n            'Sign up'\r\n        ];\r\n\r\n        const actualLinks = [];\r\n        const navlinks = await $$('.navbar-nav .nav-item a');\r\n        for (const link of navlinks) {\r\n            const text = await link.getText();\r\n            if (text.trim()) {  // Remove empty texts\r\n                actualLinks.push(text.trim().replace('(current)', '').trim());  // Remove '(current)' if exists\r\n            }\r\n        }\r\n        \r\n        console.log('Actual Links:', actualLinks);\r\n        expect(actualLinks).toEqual(expectedLinks);  // Use WebDriverIO syntax for assertion\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:51.707Z","end":"2024-09-29T06:15:55.948Z","_duration":4241,"type":"test","uid":"test-00-2","cid":"0-0","title":"Test Case 3 - Sign up with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 3 - Sign up with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/');\r\n    \r\n        const link = await $('#signin2');\r\n        await link.click();\r\n    \r\n        const emailInput = await $('#sign-username');\r\n        const passwordInput = await $('#sign-password');\r\n\r\n        // Menghasilkan username acak\r\n        const randomUsername = generateRandomUsername();\r\n        await emailInput.setValue(randomUsername); // Menggunakan username acak\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const submitButton = await $('//*[@id=\"signInModal\"]/div/div/div[3]/button[2]');\r\n        await submitButton.click();\r\n    \r\n        // Capture the success message from the modal (if it's a modal dialog)\r\n        const modalMessage = await $('div.modal-body').getText();\r\n        console.log('Modal Text:', modalMessage);\r\n    \r\n        // Assert the text\r\n        expect(modalMessage).toContain('');  // Use 'toEqual' instead of 'toDeepEqual'\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:15:55.949Z","end":"2024-09-29T06:16:00.641Z","_duration":4692,"type":"test","uid":"test-00-3","cid":"0-0","title":"Test Case 4 - Log in with valid credentials and capture dialog","fullTitle":"Sign up Page.Test Case 4 - Log in with valid credentials and capture dialog","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        await browser.url('/');\r\n        const loginLink = await $('#login2');\r\n        await loginLink.click();\r\n         \r\n        const emailInput = await $('#loginusername');\r\n        const passwordInput = await $('#loginpassword');\r\n        await emailInput.setValue('Reza Paramarta'); // Use the same random username if needed\r\n        await passwordInput.setValue('12345678');\r\n    \r\n        const loginbutton = await $('//*[@id=\"logInModal\"]/div/div/div[3]/button[2]');\r\n        await loginbutton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:00.642Z","end":"2024-09-29T06:16:08.351Z","_duration":7709,"type":"test","uid":"test-00-4","cid":"0-0","title":"Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","fullTitle":"Sign up Page.Test Case 5 - Click Samsung Galaxy S6, check specification, and Add to Cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        await browser.url('/index.html');\r\n    \r\n        // Define all elements at once\r\n        const product = {\r\n            name: await $('//*[@id=\"tbodyid\"]/div[1]/div/div/h4/a'),\r\n            image: await $('//*[@id=\"imgp\"]/div/img'),\r\n            title: await $('//*[@id=\"tbodyid\"]/h2'),\r\n            price: await $('//*[@id=\"tbodyid\"]/h3'),\r\n            specs: await $('//*[@id=\"more-information\"]')\r\n        };\r\n    \r\n        // Click on the product name (Samsung Galaxy S6)\r\n        await product.name.click();\r\n    \r\n        // Assert product details\r\n        expect(await product.image.getAttribute('src')).toContain('galaxy_s6.jpg'); // Optimized expected value\r\n        expect(await product.title.getText()).toContain('Samsung galaxy s6');\r\n        expect(await product.price.getText()).toContain('$360 *includes tax');\r\n        \r\n        // Optimized spec assertions\r\n        const specsText = await product.specs.getText();\r\n        expect(specsText).toContain('The Samsung Galaxy S6 is powered by 1.5GHz octa-core Samsung Exynos 7420 processor and it comes with 3GB of RAM.');\r\n        expect(specsText).toContain('The phone packs 32GB of internal storage');\r\n\r\n        // Add to cart\r\n        const addToCartButton = await $('//*[@id=\"tbodyid\"]/div[2]/div/a');\r\n        await addToCartButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:08.351Z","end":"2024-09-29T06:16:18.067Z","_duration":9716,"type":"test","uid":"test-00-5","cid":"0-0","title":"Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","fullTitle":"Sign up Page.Test Case 6 - Click Navigation Menu Cart and ensure item is added to cart","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => { \r\n        const cartButton = await $('//*[@id=\"cartur\"]');\r\n        await cartButton.click();\r\n\r\n        await browser.pause(8000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:18.068Z","end":"2024-09-29T06:16:21.171Z","_duration":3103,"type":"test","uid":"test-00-6","cid":"0-0","title":"Test Case 7 - Click Place Order to Purchase Item","fullTitle":"Sign up Page.Test Case 7 - Click Place Order to Purchase Item","output":[],"retries":0,"parent":"Sign up Page","state":"passed","body":"async () => {\r\n        const placeOrderButton = await $('//*[@id=\"page-wrapper\"]/div/div[2]/button');\r\n        await placeOrderButton.click();\r\n        await browser.pause(3000);\r\n    }","events":[],"errorIndex":0},{"start":"2024-09-29T06:16:21.171Z","end":"2024-09-29T06:16:32.227Z","_duration":11056,"type":"test","uid":"test-00-7","cid":"0-0","title":"Test Case 8 - Fill all input fields and click Purchase button","fullTitle":"Sign up Page.Test Case 8 - Fill all input fields and click Purchase button","output":[],"retries":0,"parent":"Sign up Page","state":"failed","errors":[{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"}],"error":{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"},"body":"async () => {\r\n        const firstNameInput = await $('//*[@id=\"name\"]');\r\n        const countryNameInput = await $('//*[@id=\"country\"]');\r\n        const cityNameInput = await $('//*[@id=\"city\"]');\r\n        const creditCardInput = await $('//*[@id=\"card\"]');\r\n        const monthInput = await $('//*[@id=\"month\"]');\r\n        const yearInput = await $('//*[@id=\"year\"]');\r\n\r\n        await firstNameInput.setValue('Reza');\r\n        await countryNameInput.setValue('Indonesia');\r\n        await cityNameInput.setValue('Jakarta');\r\n        await creditCardInput.setValue('4242424242424242');\r\n        await monthInput.setValue('12');\r\n        await yearInput.setValue('2024');\r\n\r\n        const purchaseButton = await $('//*[@id=\"orderModal\"]/div/div/div[3]/button[2]');\r\n        await purchaseButton.click();\r\n        \r\n        const modalMessage = await $('/html/body/div[12]').getText();\r\n        expect(modalMessage).toBe('Thank you for your purchase!');\r\n\r\n        await browser.pause(3000);\r\n    }","events":[{"type":"Error","value":{"name":"Error","message":"Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found","stack":"Error: Can't call getText on element with selector \"/html/body/div[12]\" because element wasn't found\n    at implicitWait (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:49:13)\n    at Element.elementErrorHandlerCallbackFn (D:\\TestQAAkhdani\\node_modules\\webdriverio\\build\\index.js:6689:23)\n    at Element.wrapCommandFn (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1370:23)\n    at async Context.<anonymous> (file:///D:/TestQAAkhdani/test/specs/demoTest.js:147:30)\n    at Context.executeAsync (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1490:20)\n    at Context.testFrameworkFnWrapper (D:\\TestQAAkhdani\\node_modules\\@wdio\\utils\\build\\index.js:1561:14)","type":"Error"}}],"errorIndex":1}]}],"reportFile":"D:\\TestQAAkhdani\\reports\\html-reports\\report-0-0.html","browserName":"not specified"}